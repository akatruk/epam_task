name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # Unit:
  #   name: Unit test
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2
  #   - name: download python
  #     run: | 
  #       python -m pip install --upgrade pip
  #       pip install flask yaml2 psycopg2
  #       sudo apt-get --yes install python3-psycopg2 curl
  #   - name: Run unittest
  #     run: |
  #       python test_show_result.py

  Build:
    runs-on: ubuntu-latest
    # needs: Unit
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      #   name: define enviroments
      #   run: |
      #    echo "IMAGE_TAG=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV
      # -
      #   name: print
      #   run: |
      #    echo errbx/epam:$IMAGE_TAG
      
      - name: Build and push to Github regestry
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: errbx/epam_task:latest

  Deploy:
    name: Deploy to EKS cluster
    needs: Build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: helm chart install
      run: |
        curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
        chmod 700 get_helm.sh
        ./get_helm.sh

    - name: Helm Chart update
      run: |
        helm update epam-app app-HelmChart/ --set container.image=errbx/epam_task:latest

  #   - name: Configure k8s_epam
  #     run: |
  #       aws eks --region eu-west-3 update-kubeconfig --name k8s_epam

## deployment should works with external env
## and each time with new docker tag

    # - name: Update deployment k8s_epam
    #   run: |
    #     kubectl apply -f k8s/deployment.yml

    # - name: Update service k8s_epam
    #   run: |
    #     kubectl apply -f k8s/service.yml

    # - name: helm chart install
    #   run: |
    #     curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
    #     chmod 700 get_helm.sh
    #     ./get_helm.sh

